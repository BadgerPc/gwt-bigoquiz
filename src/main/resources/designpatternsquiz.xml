<?xml version="1.0" encoding="UTF-8"?>
<quiz xmlns="http://bigoquiz.com/document" format_version="1" id="designpatternsquiz">
    <title>Design Patterns Quiz</title>

    <section id="core-definitions" answers_as_choices="true">
        <title>Core Definitions</title>
        <question id="definition-decorator">
            <text>Decorator</text>
            <answer>Wraps an object to provide new behavior.</answer>
        </question>

        <question id="definition-state">
            <text>State</text>
            <answer>Encapsulates state-based behaviors and uses delegation to switch between behaviors.</answer>
        </question>

        <question id="definition-iterator">
            <text>Iterator</text>
            <answer>Provides a way to traverse a collection of objects without exposing its implementation.</answer>
        </question>

        <question id="definition-facade">
            <text>Facade</text>
            <answer>Simplifies the interface of a set of classes.</answer>
        </question>

        <question id="definition-strategy">
            <text>Strategy</text>
            <answer>Encapsulates interchangeable behaviors and uses delegation to decide which one to use.</answer>
        </question>

        <question id="definition-strategy">
            <text>Proxy</text>
            <answer>Wrap an object to control access to it.</answer>
        </question>

        <question id="definition-factory-method">
            <text>Factory Method</text>
            <answer>Subclasses decide which concrete classes to create.</answer>
        </question>

        <question id="definition-adapter">
            <text>Adapter</text>
            <answer>Wraps an object and provides a different interface to it.</answer>
        </question>

        <question id="definition-observer">
            <text>Observer</text>
            <answer>Allows objects to be notified when state changes.</answer>
        </question>

        <question id="definition-template-method">
            <text>Template Method</text>
            <answer>Subclasses decide how to implement steps in an algorithm.</answer>
        </question>

        <question id="definition-composite">
            <text>Composite</text>
            <answer>Clients treat collections of objects and individual objects uniformly.</answer>
        </question>

        <question id="definition-singleton">
            <text>Singleton</text>
            <answer>Ensures one and only one object is created.</answer>
        </question>

        <question id="definition-abstract-factory">
            <text>Abstract Factory</text>
            <answer>Allow a client to create families of objects without specifying their concrete classes.</answer>
        </question>

        <question id="definition-command">
            <text>Command</text>
            <answer>Encapsulates a request as an object.</answer>
        </question>
    </section>

</quiz>