<?xml version="1.0" encoding="UTF-8"?>
<quiz xmlns="http://bigoquiz.com/document" format_version="1">
    <title>Big-O Quiz</title>
    <section id="data-structure-operations">
        <title>Data Structure Operations</title>
        <default_choices>
            <choice>O(1)</choice>
            <choice>O(log(n))</choice>
            <choice>O(n)</choice>
            <choice>O(n log(n))</choice>
            <choice>O(n^2)</choice>
            <choice>O(nk)</choice>
            <choice>O(n + k)</choice>
        </default_choices>
        <subsection id="array">
            <title>Array</title>
            <question id="array-access-average">
                <text>Array: Access (Average)</text>
                <answer>O(1)</answer>
            </question>
            <question id="array-search-average">
                <text>Array: Search (Average)</text>
                <answer>O(n)</answer>
            </question>
            <question id="array-insertion-average">
                <text>Array: Insertion (Average)</text>
                <answer>O(n)</answer>
            </question>
            <question id="array-deletion-average">
                <text>Array: Deletion (Average)</text>
                <answer>O(n)</answer>
            </question>

            <question id="array-access-worst">
                <text>Array: Access (Worst)</text>
                <answer>O(1)</answer>
            </question>
            <question id="array-search-worst">
                <text>Array: Search (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="array-insertion-worst">
                <text>Array: Insertion (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="array-deletion-worst">
                <text>Array: Deletion (Worst)</text>
                <answer>O(n)</answer>
            </question>

            <question id="array-space">
                <text>Array: Space Complexity</text>
                <answer>O(n)</answer>
            </question>
        </subsection>

        <subsection id="stack">
            <title>Stack</title>
            <question id="stack-access-average">
                <text>Stack: Access (Average)</text>
                <answer>O(n)</answer>
            </question>
            <question id="stack-search-average">
                <text>Stack: Search (Average)</text>
                <answer>O(n)</answer>
            </question>
            <question id="stack-insertion-average">
                <text>Stack: Insertion (Average)</text>
                <answer>O(1)</answer>
            </question>
            <question id="stack-deletion-average">
                <text>Stack: Deletion (Average)</text>
                <answer>O(1)</answer>
            </question>

            <question id="stack-access-worst">
                <text>Stack: Access (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="stack-search-worst">
                <text>Stack: Search (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="stack-insertion-worst">
                <text>Stack: Insertion (Worst)</text>
                <answer>O(1)</answer>
            </question>
            <question id="stack-deletion-worst">
                <text>Stack: Deletion (Worst)</text>
                <answer>O(1)</answer>
            </question>

            <question id="stack-space">
                <text>Stack: Space Complexity</text>
                <answer>O(n)</answer>
            </question>
        </subsection>

        <subsection id="singly-linked-list">
            <title>Singly-Linked List</title>
            <question id="singly-linked-list-access-average">
                <text>Singly-Linked List: Access (Average)</text>
                <answer>O(n)</answer>
            </question>
            <question id="singly-linked-list-search-average">
                <text>Singly-Linked List: Search (Average)</text>
                <answer>O(n)</answer>
            </question>
            <question id="singly-linked-list-insertion-average">
                <text>Singly-Linked List: Insertion (Average)</text>
                <answer>O(1)</answer>
            </question>
            <question id="singly-linked-list-deletion-average">
                <text>Singly-Linked List: Deletion (Average)</text>
                <answer>O(1)</answer>
            </question>

            <question id="singly-linked-list-access-worst">
                <text>Singly-Linked List: Access (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="singly-linked-list-search-worst">
                <text>Singly-Linked List: Search (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="singly-linked-list-insertion-worst">
                <text>Singly-Linked List: Insertion (Worst)</text>
                <answer>O(1)</answer>
            </question>
            <question id="singly-linked-list-deletion-worst">
                <text>Singly-Linked List: Deletion (Worst)</text>
                <answer>O(1)</answer>
            </question>

            <question id="singly-linked-list-space">
                <text>Singly-Linked List: Space Complexity</text>
                <answer>O(n)</answer>
            </question>
        </subsection>

        <subsection id="doubly-linked-list">
            <title>Doubly-Linked List</title>
            <question id="doubly-linked-list-access-average">
                <text>Doubly-Linked List: Access (Average)</text>
                <answer>O(n)</answer>
            </question>
            <question id="doubly-linked-list-search-average">
                <text>Doubly-Linked List: Search (Average)</text>
                <answer>O(n)</answer>
            </question>
            <question id="doubly-linked-list-insertion-average">
                <text>Doubly-Linked List: Insertion (Average)</text>
                <answer>O(1)</answer>
            </question>
            <question id="doubly-linked-list-deletion-average">
                <text>Doubly-Linked List: Deletion (Average)</text>
                <answer>O(1)</answer>
            </question>

            <question id="doubly-linked-list-access-worst">
                <text>Doubly-Linked List: Access (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="doubly-linked-list-search-worst">
                <text>Doubly-Linked List: Search (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="doubly-linked-list-insertion-worst">
                <text>Doubly-Linked List: Insertion (Worst)</text>
                <answer>O(1)</answer>
            </question>
            <question id="doubly-linked-list-deletion-worst">
                <text>Doubly-Linked List: Deletion (Worst)</text>
                <answer>O(1)</answer>
            </question>

            <question id="doubly-linked-list-space">
                <text>Doubly-Linked List: Space Complexity</text>
                <answer>O(n)</answer>
            </question>
        </subsection>

        <subsection id="skip-list">
            <title>Skip List</title>
            <question id="skip-list-access-average">
                <text>Skip List: Access (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="skip-list-search-average">
                <text>Skip List: Search (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="skip-list-insertion-average">
                <text>Skip List: Insertion (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="skip-list-deletion-average">
                <text>Skip List: Deletion (Average)</text>
                <answer>O(log(n))</answer>
            </question>

            <question id="skip-list-access-worst">
                <text>Skip List: Access (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="skip-list-search-worst">
                <text>Skip List: Search (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="skip-list-insertion-worst">
                <text>Skip List: Insertion (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="skip-list-deletion-worst">
                <text>Skip List: Deletion (Worst)</text>
                <answer>O(n)</answer>
            </question>

            <question id="skip-list-space">
                <text>Skip List: Space Complexity</text>
                <answer>O(n log(n))</answer>
            </question>
        </subsection>

        <subsection id="hash-table">
            <title>Hash Table</title>
            <!-- No hash-table-search-access-average -->
            <question id="hash-table-search-average">
                <text>Hash Table: Search (Average)</text>
                <answer>O(1)</answer>
            </question>
            <question id="hash-table-insertion-average">
                <text>Hash Table: Insertion (Average)</text>
                <answer>O(1)</answer>
            </question>
            <question id="hash-table-deletion-average">
                <text>Hash Table: Deletion (Average)</text>
                <answer>O(1))</answer>
            </question>

            <!-- No hash-table-search-access-worst -->
            <question id="hash-table-search-worst">
                <text>Hash Table: Search (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="hash-table-insertion-worst">
                <text>Hash Table: Insertion (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="hash-table-deletion-worst">
                <text>Hash Table: Deletion (Worst)</text>
                <answer>O(n)</answer>
            </question>

            <question id="hash-table-space">
                <text>Hash Table: Space Complexity</text>
                <answer>O(n)</answer>
            </question>
        </subsection>

        <subsection id="binary-search-tree">
            <title>Binary Search Tree</title>
            <question id="binary-search-tree-access-average">
                <text>Binary Search Tree: Access (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="binary-search-tree-search-average">
                <text>Binary Search Tree: Search (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="binary-search-tree-insertion-average">
                <text>Binary Search Tree: Insertion (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="binary-search-tree-deletion-average">
                <text>Binary Search Tree: Deletion (Average)</text>
                <answer>O(log(n))</answer>
            </question>

            <question id="binary-search-tree-access-worst">
                <text>Binary Search Tree: Access (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="binary-search-tree-search-worst">
                <text>Binary Search Tree: Search (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="binary-search-tree-insertion-worst">
                <text>Binary Search Tree: Insertion (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="binary-search-tree-deletion-worst">
                <text>Binary Search Tree: Deletion (Worst)</text>
                <answer>O(n)</answer>
            </question>

            <question id="binary-search-tree-space">
                <text>Binary Search Tree: Space Complexity</text>
                <answer>O(n)</answer>
            </question>
        </subsection>

        <subsection id="cartesian-tree">
            <title>Cartesian Tree</title>
            <!-- No cartesian-tree-search-access-average -->
            <question id="cartesian-tree-search-average">
                <text>Cartesian Tree: Search (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="cartesian-tree-insertion-average">
                <text>Cartesian Tree: Insertion (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="cartesian-tree-deletion-average">
                <text>Cartesian Tree: Deletion (Average)</text>
                <answer>O(log(n))</answer>
            </question>

            <!-- No cartesian-tree-search-access-worst -->
            <question id="cartesian-tree-search-worst">
                <text>Cartesian Tree: Search (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="cartesian-tree-insertion-worst">
                <text>Cartesian Tree: Insertion (Worst)</text>
                <answer>O(n)</answer>
            </question>
            <question id="cartesian-tree-deletion-worst">
                <text>Cartesian Tree: Deletion (Worst)</text>
                <answer>O(n)</answer>
            </question>

            <question id="cartesian-tree-space">
                <text>Cartesian Tree: Space Complexity</text>
                <answer>O(n)</answer>
            </question>
        </subsection>

        <subsection id="b-tree">
            <title>B-Tree</title>
            <question id="b-tree-access-average">
                <text>B-Tree: Access (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="b-tree-search-average">
                <text>B-Tree: Search (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="b-tree-insertion-average">
                <text>B-Tree: Insertion (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="b-tree-deletion-average">
                <text>B-Tree: Deletion (Average)</text>
                <answer>O(log(n))</answer>
            </question>

            <question id="b-tree-access-worst">
                <text>B-Tree: Access (Worst)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="b-tree-search-worst">
                <text>B-Tree: Search (Worst)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="b-tree-insertion-worst">
                <text>B-Tree: Insertion (Worst)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="b-tree-deletion-worst">
                <text>B-Tree: Deletion (Worst)</text>
                <answer>O(log(n))</answer>
            </question>

            <question id="b-tree-space">
                <text>B-Tree: Space Complexity</text>
                <answer>O(n)</answer>
            </question>
        </subsection>

        <subsection id="red-black-tree">
            <title>Red Black Tree</title>
            <question id="red-black-tree-access-average">
                <text>Red Black Tree: Access (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="red-black-tree-search-average">
                <text>Red Black Tree: Search (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="red-black-tree-insertion-average">
                <text>Red Black Tree: Insertion (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="red-black-tree-deletion-average">
                <text>Red Black Tree: Deletion (Average)</text>
                <answer>O(log(n))</answer>
            </question>

            <question id="red-black-tree-access-worst">
                <text>Red Black Tree: Access (Worst)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="red-black-tree-search-worst">
                <text>Red Black Tree: Search (Worst)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="red-black-tree-insertion-worst">
                <text>Red Black Tree: Insertion (Worst)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="red-black-tree-deletion-worst">
                <text>Red Black Tree: Deletion (Worst)</text>
                <answer>O(log(n))</answer>
            </question>

            <question id="red-black-tree-space">
                <text>Red Black Tree: Space Complexity</text>
                <answer>O(n)</answer>
            </question>
        </subsection>

        <subsection id="splay-tree">
            <title>Splay Tree</title>
            <!-- No splay-tree-search-access-average -->
            <question id="splay-tree-search-average">
                <text>Splay Tree: Search (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="splay-tree-insertion-average">
                <text>Splay Tree: Insertion (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="splay-tree-deletion-average">
                <text>Splay Tree: Deletion (Average)</text>
                <answer>O(log(n))</answer>
            </question>

            <!-- No splay-tree-search-access-worst -->
            <question id="splay-tree-search-worst">
                <text>Splay Tree: Search (Worst)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="splay-tree-insertion-worst">
                <text>Splay Tree: Insertion (Worst)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="splay-tree-deletion-worst">
                <text>Splay Tree: Deletion (Worst)</text>
                <answer>O(log(n))</answer>
            </question>

            <question id="splay-tree-space">
                <text>Splay Tree: Space Complexity</text>
                <answer>O(n)</answer>
            </question>
        </subsection>

        <subsection id="avl-tree">
            <title>AVL Tree</title>
            <question id="avl-tree-access-average">
                <text>AVL Tree: Access (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="avl-tree-search-average">
                <text>AVL Tree: Search (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="avl-tree-insertion-average">
                <text>AVL Tree: Insertion (Average)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="avl-tree-deletion-average">
                <text>AVL Tree: Deletion (Average)</text>
                <answer>O(log(n))</answer>
            </question>

            <question id="avl-tree-access-worst">
                <text>AVL Tree: Access (Worst)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="avl-tree-search-worst">
                <text>AVL Tree: Search (Worst)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="avl-tree-insertion-worst">
                <text>AVL Tree: Insertion (Worst)</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="avl-tree-deletion-worst">
                <text>AVL Tree: Deletion (Worst)</text>
                <answer>O(log(n))</answer>
            </question>

            <question id="avl-tree-space">
                <text>AVL Tree: Space Complexity</text>
                <answer>O(n)</answer>
            </question>
        </subsection>

    </section>

    <section id="array-sorting-algorithms">
        <title>Array Sorting Algorithms</title>
        <default_choices>
            <choice>O(1)</choice>
            <choice>O(log(n))</choice>
            <choice>O(n)</choice>
            <choice>O(n log(n))</choice>
            <choice>O(n^2)</choice>
            <choice>O(nk)</choice>
            <choice>O(n + k)</choice>
            <choice>O((n log(n))^2)</choice>
        </default_choices>
        <subsection id="quicksort">
            <title>Quicksort</title>
            <question id="quicksort-time-best">
                <text>Quicksort: Time (Best)</text>
                <answer>O(n log(n))</answer>
            </question>
            <question id="quicksort-time-average">
                <text>Quicksort: Time (Average)</text>
                <answer>O(n log(n))</answer>
            </question>
            <question id="quicksort-time-worst">
                <text>Quicksort: Time (Worst)</text>
                <answer>O(n^2)</answer>
            </question>
            <question id="quicksort-space-worst">
                <text>Quicksort: Space (Worst)</text>
                <answer>O(log(n))</answer>
            </question>
        </subsection>

        <subsection id="mergesort">
            <title>Mergesort</title>
            <question id="mergesort-time-best">
                <text>Mergesort: Time (Best)</text>
                <answer>O(n log(n))</answer>
            </question>
            <question id="mergesort-time-average">
                <text>Mergesort: Time (Average)</text>
                <answer>O(n log(n))</answer>
            </question>
            <question id="mergesort-time-worst">
                <text>Mergesort: Time (Worst)</text>
                <answer>O(n log(n))</answer>
            </question>
            <question id="mergesort-space-worst">
                <text>Mergesort: Space (Worst)</text>
                <answer>O(n)</answer>
            </question>
        </subsection>

        <subsection id="timsort">
            <title>Timsort</title>
            <question id="timsort-time-best">
                <text>Timsort: Time (Best)</text>
                <answer>O(n)</answer>
            </question>
            <question id="timsort-time-average">
                <text>Timsort: Time (Average)</text>
                <answer>O(n log(n))</answer>
            </question>
            <question id="timsort-time-worst">
                <text>Timsort: Time (Worst)</text>
                <answer>O(n log(n))</answer>
            </question>
            <question id="timsort-space-worst">
                <text>Timsort: Space (Worst)</text>
                <answer>O(n)</answer>
            </question>
        </subsection>

        <subsection id="heapsort">
            <title>Heapsort</title>
            <question id="heapsort-time-best">
                <text>Heapsort: Time (Best)</text>
                <answer>O(n log(n))</answer>
            </question>
            <question id="heapsort-time-average">
                <text>Heapsort: Time (Average)</text>
                <answer>O(n log(n))</answer>
            </question>
            <question id="heapsort-time-worst">
                <text>Heapsort: Time (Worst)</text>
                <answer>O(n log(n))</answer>
            </question>
            <question id="heapsort-space-worst">
                <text>Heapsort: Space (Worst)</text>
                <answer>O(1)</answer>
            </question>
        </subsection>

        <subsection id="bubble-sort">
            <title>Bubble Sort</title>
            <question id="bubble-sort-time-best">
                <text>Bubble Sort: Time (Best)</text>
                <answer>O(n)</answer>
            </question>
            <question id="bubble-sort-time-average">
                <text>Bubble Sort: Time (Average)</text>
                <answer>O(n^2)</answer>
            </question>
            <question id="bubble-sort-time-worst">
                <text>Bubble Sort: Time (Worst)</text>
                <answer>O(n^2)</answer>
            </question>
            <question id="bubble-sort-space-worst">
                <text>Bubble Sort: Space (Worst)</text>
                <answer>O(1)</answer>
            </question>
        </subsection>

        <subsection id="insertion-sort">
            <title>Insertion Sort</title>
            <question id="insertion-sort-time-best">
                <text>Insertion Sort: Time (Best)</text>
                <answer>O(n)</answer>
            </question>
            <question id="insertion-sort-time-average">
                <text>Insertion Sort: Time (Average)</text>
                <answer>O(n^2)</answer>
            </question>
            <question id="insertion-sort-time-worst">
                <text>Insertion Sort: Time (Worst)</text>
                <answer>O(n^2)</answer>
            </question>
            <question id="insertion-sort-space-worst">
                <text>Insertion Sort: Space (Worst)</text>
                <answer>O(1)</answer>
            </question>
        </subsection>

        <subsection id="selection-sort">
            <title>Selection Sort</title>
            <question id="selection-sort-time-best">
                <text>Selection Sort: Time (Best)</text>
                <answer>O(n^2)</answer>
            </question>
            <question id="selection-sort-time-average">
                <text>Selection Sort: Time (Average)</text>
                <answer>O(n^2)</answer>
            </question>
            <question id="selection-sort-time-worst">
                <text>Selection Sort: Time (Worst)</text>
                <answer>O(n^2)</answer>
            </question>
            <question id="selection-sort-space-worst">
                <text>Selection Sort: Space (Worst)</text>
                <answer>O(1)</answer>
            </question>
        </subsection>

        <subsection id="shell-sort">
            <title>Shell Sort</title>
            <question id="shell-sort-sort-time-best">
                <text>Shell Sort: Time (Best)</text>
                <answer>O(n)</answer>
            </question>
            <question id="shell-sort-sort-time-average">
                <text>Shell Sort: Time (Average)</text>
                <answer>O((n log(n))^2)</answer>
            </question>
            <question id="shell-sort-sort-time-worst">
                <text>Shell Sort: Time (Worst)</text>
                <answer>O((n log(n))^2))</answer>
            </question>
            <question id="shell-sort-sort-space-worst">
                <text>Shell Sort: Space (Worst)</text>
                <answer>O(1)</answer>
            </question>
        </subsection>

        <subsection id="bucket-sort">
            <title>Bucket Sort</title>
            <question id="bucket-sort-sort-time-best">
                <text>Bucket Sort: Time (Best)</text>
                <answer>O(n + k)</answer>
            </question>
            <question id="bucket-sort-sort-time-average">
                <text>Bucket Sort: Time (Average)</text>
                <answer>O(n + k)</answer>
            </question>
            <question id="bucket-sort-sort-time-worst">
                <text>Bucket Sort: Time (Worst)</text>
                <answer>O(n^2)</answer>
            </question>
            <question id="bucket-sort-sort-space-worst">
                <text>Bucket Sort: Space (Worst)</text>
                <answer>O(n)</answer>
            </question>
        </subsection>

        <subsection id="radix-sort">
            <title>Radix Sort</title>
            <question id="radix-sort-sort-time-best">
                <text>Radix Sort: Time (Best)</text>
                <answer>O(nk)</answer>
            </question>
            <question id="radix-sort-sort-time-average">
                <text>Radix Sort: Time (Average)</text>
                <answer>O(nk)</answer>
            </question>
            <question id="radix-sort-sort-time-worst">
                <text>Radix Sort: Time (Worst)</text>
                <answer>O(nk)</answer>
            </question>
            <question id="radix-sort-sort-space-worst">
                <text>Radix Sort: Space (Worst)</text>
                <answer>O(n + k)</answer>
            </question>
        </subsection>
    </section>

    <section id="graph-operations">
        <title>Graph Operations</title>
        <default_choices>
            <choice>O(1)</choice>
            <choice>O(|E|)</choice>
            <choice>O(|V|)</choice>
            <choice>O(|V| + |E|)</choice>
            <choice>O(|V| ⋅ |E|)</choice>
            <choice>O(|V|^2)</choice>
        </default_choices>
        <subsection id="adjacency-list">
            <title>Adjacency List</title>
            <question id="adjacency-list-storage">
                <text>Adjacency List: Storage</text>
                <answer>O(|V| + |E|)</answer>
            </question>
            <question id="adjacency-list-add-vertex">
                <text>Adjacency List: Add Vertex</text>
                <answer>O(1)</answer>
            </question>
            <question id="adjacency-list-add-edge">
                <text>Adjacency List: Add Edge</text>
                <answer>O(1)</answer>
            </question>
            <question id="adjacency-list-remove-vertex">
                <text>Adjacency List: Remove Vertex</text>
                <answer>O(|V| + |E|)</answer>
            </question>
            <question id="adjacency-list-remove-edge">
                <text>Adjacency List: Remove Edge</text>
                <answer>O(|E|)</answer>
            </question>
            <question id="adjacency-list-query">
                <text>Adjacency List: Query</text>
                <answer>O(|V|)</answer>
            </question>
        </subsection>

        <subsection id="incidence-list">
            <title>Incidence List</title>
            <question id="incidence-list-storage">
                <text>Incidence List: Storage</text>
                <answer>O(|V| + |E|)</answer>
            </question>
            <question id="incidence-list-add-vertex">
                <text>Incidence List: Add Vertex</text>
                <answer>O(1)</answer>
            </question>
            <question id="incidence-list-add-edge">
                <text>Incidence List: Add Edge</text>
                <answer>O(1)</answer>
            </question>
            <question id="incidence-list-remove-vertex">
                <text>Incidence List: Remove Vertex</text>
                <answer>O(|E|)</answer>
            </question>
            <question id="incidence-list-remove-edge">
                <text>Incidence List: Remove Edge</text>
                <answer>O(|E|)</answer>
            </question>
            <question id="incidence-list-query">
                <text>Incidence List: Query</text>
                <answer>O(|E|)</answer>
            </question>
        </subsection>

        <subsection id="adjacency-matrix">
            <title>Ajacency Matrix</title>
            <question id="adjacency-matrix-storage">
                <text>Adjacency Matrix: Storage</text>
                <answer>O(|V|^2)</answer>
            </question>
            <question id="adjacency-matrix-add-vertex">
                <text>Adjacency Matrix: Add Vertex</text>
                <answer>O(|V|^2)</answer>
            </question>
            <question id="adjacency-matrix-add-edge">
                <text>Adjacency Matrix: Add Edge</text>
                <answer>O(1)</answer>
            </question>
            <question id="adjacency-matrix-remove-vertex">
                <text>Adjacency Matrix: Remove Vertex</text>
                <answer>O(|V|^2)</answer>
            </question>
            <question id="adjacency-matrix-remove-edge">
                <text>Adjacency Matrix: Remove Edge</text>
                <answer>O(1)</answer>
            </question>
            <question id="adjacency-matrix-query">
                <text>Adjacency Matrix: Query</text>
                <answer>O(1)</answer>
            </question>
        </subsection>

        <subsection id="incidence-matrix">
            <title>Incidence Matrix</title>
            <question id="incidence-matrix-storage">
                <text>Incidence Matrix: Storage</text>
                <answer>O(|V| ⋅ |E|)</answer>
            </question>
            <question id="incidence-matrix-add-vertex">
                <text>Incidence Matrix: Add Vertex</text>
                <answer>O(|V| ⋅ |E|)</answer>
            </question>
            <question id="incidence-matrix-add-edge">
                <text>Incidence Matrix: Add Edge</text>
                <answer>O(|V| ⋅ |E|)</answer>
            </question>
            <question id="incidence-matrix-remove-vertex">
                <text>Incidence Matrix: Remove Vertex</text>
                <answer>O(|V| ⋅ |E|)</answer>
            </question>
            <question id="incidence-matrix-remove-edge">
                <text>Incidence Matrix: Remove Edge</text>
                <answer>O(|V| ⋅ |E|)</answer>
            </question>
            <question id="incidence-matrix-query">
                <text>Incidence Matrix: Query</text>
                <answer>O(|E|)</answer>
            </question>
        </subsection>
    </section>

    <section id="heap-operations">
        <title>Heap Operations</title>
        <default_choices>
            <choice>O(1)</choice>
            <choice>O(log(n))</choice>
            <choice>O(n)</choice>
            <choice>O(n log(n))</choice>
            <choice>O(n^2)</choice>
            <choice>O(m + n)</choice>
        </default_choices>
        <subsection id="linked-list-sorted">
            <title>Linked List (sorted)</title>
            <!-- No linked-list-sorted-heapify -->
            <question id="linked-list-sorted-find-max">
                <text>Linked List (sorted): Find Max</text>
                <answer>O(1)</answer>
            </question>
            <question id="linked-list-sorted-extract-max">
                <text>Linked List (sorted): Extract Max</text>
                <answer>O(1)</answer>
            </question>
            <question id="linked-list-sorted-increase-key">
                <text>Linked List (sorted): Increase Key</text>
                <answer>O(n)</answer>
            </question>
            <question id="linked-list-sorted-insert">
                <text>Linked List (sorted): Insert</text>
                <answer>O(n)</answer>
            </question>
            <question id="linked-list-sorted-delete">
                <text>Linked List (sorted): Delete</text>
                <answer>O(1)</answer>
            </question>
            <question id="linked-list-sorted-merge">
                <text>Linked List (sorted): Merge</text>
                <answer>O(m + n)</answer>
            </question>
        </subsection>

        <subsection id="linked-list-unsorted">
            <title>Linked List (unsorted)</title>
            <!-- No linked-list-unsorted-heapify -->
            <question id="linked-list-unsorted-find-max">
                <text>Linked List (unsorted): Find Max</text>
                <answer>O(n)</answer>
            </question>
            <question id="linked-list-unsorted-extract-max">
                <text>Linked List (unsorted): Extract Max</text>
                <answer>O(n)</answer>
            </question>
            <question id="linked-list-unsorted-increase-key">
                <text>Linked List (unsorted): Increase Key</text>
                <answer>O(1)</answer>
            </question>
            <question id="linked-list-unsorted-insert">
                <text>Linked List (unsorted): Insert</text>
                <answer>O(1)</answer>
            </question>
            <question id="linked-list-unsorted-delete">
                <text>Linked List (unsorted): Delete</text>
                <answer>O(1)</answer>
            </question>
            <question id="linked-list-unsorted-merge">
                <text>Linked List (unsorted): Merge</text>
                <answer>O(1)</answer>
            </question>
        </subsection>

        <subsection id="binary-heap">
            <title>Binary Heap</title>
            <question id="binary-heap-heapify">
                <text>Binary Heap: Heapify</text>
                <answer>O(n)</answer>
            </question>
            <question id="binary-heap-find-max">
                <text>Binary Heap: Find Max</text>
                <answer>O(1)</answer>
            </question>
            <question id="binary-heap-extract-max">
                <text>Binary Heap: Extract Max</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="binary-heap-increase-key">
                <text>Binary Heap: Increase Key</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="binary-heap-insert">
                <text>Binary Heap: Insert</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="binary-heap-delete">
                <text>Binary Heap: Delete</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="binary-heap-merge">
                <text>Binary Heap: Merge</text>
                <answer>O(m + n)</answer>
            </question>
        </subsection>

        <subsection id="binomial-heap">
            <title>Binomial Heap</title>
            <!-- No binomial-heap-heapify -->
            <question id="binomial-heap-find-max">
                <text>Binomial Heap: Find Max</text>
                <answer>O(1)</answer>
            </question>
            <question id="binomial-heap-extract-max">
                <text>Binomial Heap: Extract Max</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="binomial-heap-increase-key">
                <text>Binomial Heap: Increase Key</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="binomial-heap-insert">
                <text>Binomial Heap: Insert</text>
                <answer>O(1)</answer>
            </question>
            <question id="binomial-heap-delete">
                <text>Binomial Heap: Delete</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="binomial-heap-merge">
                <text>Binomial Heap: Merge</text>
                <answer>O(log(n))</answer>
            </question>
        </subsection>

        <subsection id="fibonacci-heap">
            <title>Fibonacci Heap</title>
            <!-- No fibonacci-heap-heapify -->
            <question id="fibonacci-heap-find-max">
                <text>Fibonacci Heap: Find Max</text>
                <answer>O(1)</answer>
            </question>
            <question id="fibonacci-heap-extract-max">
                <text>Fibonacci Heap: Extract Max</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="fibonacci-heap-increase-key">
                <text>Fibonacci Heap: Increase Key</text>
                <answer>O(1)</answer>
            </question>
            <question id="fibonacci-heap-insert">
                <text>Fibonacci Heap: Insert</text>
                <answer>O(1)</answer>
            </question>
            <question id="fibonacci-heap-delete">
                <text>Fibonacci Heap: Delete</text>
                <answer>O(log(n))</answer>
            </question>
            <question id="fibonacci-heap-merge">
                <text>Fibonacci Heap: Merge</text>
                <answer>O(1)</answer>
            </question>
        </subsection>
    </section>
</quiz>